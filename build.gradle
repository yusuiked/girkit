/*
 * Copyright 2015 Yusuke Ikeda
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'groovy'
    id 'application'
    id 'idea'
    id 'maven-publish'
    id 'com.jfrog.bintray' version '1.3.1'
    id 'net.researchgate.release' version '2.2.0'
}

ext {
    javaVersion = JavaVersion.VERSION_1_8
}

description = 'IRKit client for Groovy'
group = 'org.yukung'

targetCompatibility = sourceCompatibility = javaVersion
tasks.withType(AbstractCompile)*.options*.encoding = tasks.withType(GroovyCompile)*.groovyOptions*.encoding = 'UTF-8'

mainClassName = 'org.yukung.girkit.GirkitCli'

repositories {
    jcenter()
}

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.4.4'
    compile 'javax.jmdns:jmdns:3.4.1'
    compile 'com.github.groovy-wslite:groovy-wslite:1.1.2'
    compile 'commons-validator:commons-validator:1.4.1'
    runtime 'commons-cli:commons-cli:1.3.1'
    testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
}

processResources {
    filter org.apache.tools.ant.filters.ReplaceTokens, tokens: [version: project.version]
}

idea {
    project {
        jdkName = javaVersion
        languageLevel = javaVersion
        vcs = 'Git'
    }
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

task javadocJar(type: Jar, dependsOn: groovydoc) {
    from groovydoc.destinationDir
    classifier = 'javadoc'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar

            final github = 'https://github.com/yukung/girkit'
            pom.withXml {
                asNode().children().last() + {
                    resolveStrategy = DELEGATE_FIRST
                    name project.name
                    description project.description
                    url github
                    scm {
                        url "${github}.git"
                        connection "scm:git:${github}.git"
                    }
                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                            distribution 'repo'
                        }
                    }
                    developers {
                        developer {
                            id 'yukung'
                            name 'Yusuke Ikeda'
                        }
                    }
                }
            }
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER') ?: project.properties.bintrayUser
    key = System.getenv('BINTRAY_KEY') ?: project.properties.bintrayKey
    publications = ['maven']
    publish = true
    pkg {
        repo = 'maven'
        name = project.name
        desc = project.description
        final github = 'https://github.com/yukung/girkit'
        websiteUrl = github
        issueTrackerUrl = "${github}/issues"
        vcsUrl = "${github}.git"
        licenses = ['Apache-2.0']
        version {
            name = project.version
            desc = project.description
            released = java.time.OffsetDateTime.now().format(java.time.format.DateTimeFormatter.ofPattern("yyyy-MM-dd'T'HH:mm:ss.SSSZZ"))
            vcsTag = project.version
        }
    }
}

afterReleaseBuild.dependsOn bintrayUpload

task wrapper(type: Wrapper) {
    gradleVersion = '2.9'
}
